# Example configuration for OAuth-enabled MCP server
# This shows how to configure for different OAuth providers

[server]
name = "{{project-name}}"
transport = { http-streaming = { port = 8080 } }

[telemetry]
level = "debug"
format = "json"
# Use JSON format for structured logging in production

[redis]
url = "redis://localhost:6379"

# Example Redis data structure for OAuth tokens:
# 
# Session mappings (5-10 min TTL):
# mcp_session:{uuid4} -> {
#   "session_id": "550e8400-e29b-41d4-a716-446655440000",
#   "user_id": "user123",
#   "created_at": "2023-12-01T10:00:00Z",
#   "expires_at": "2023-12-01T10:10:00Z"
# }
#
# OAuth tokens (persistent until revoked):
# linked_account:{user_id}:google -> {
#   "user_id": "user123",
#   "provider": "google",
#   "provider_user_id": "google_user_456",
#   "email": "user@example.com",
#   "display_name": "John Doe",
#   "access_token": "ya29.xxx",
#   "refresh_token": "1//xxx",
#   "expires_at": "2023-12-01T11:00:00Z",
#   "scopes": [
#     "https://www.googleapis.com/auth/userinfo.email",
#     "https://www.googleapis.com/auth/userinfo.profile"
#   ],
#   "linked_at": "2023-12-01T09:00:00Z"
# }
#
# linked_account:{user_id}:github -> {
#   "user_id": "user123",
#   "provider": "github",
#   "provider_user_id": "github_user_789",
#   "email": "user@example.com",
#   "display_name": "John Doe",
#   "access_token": "ghp_xxx",
#   "refresh_token": null,
#   "expires_at": "2024-12-01T09:00:00Z",
#   "scopes": ["user:email", "repo"],
#   "linked_at": "2023-12-01T09:00:00Z"
# }